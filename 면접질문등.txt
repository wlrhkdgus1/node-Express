

<인성면접>
0. 
- 해당 회사가 무슨 기술을 쓰는지, 어떤 회사인지 찾아본 후 면접을 갈 것.
 회사에 대한 질문을 안하는 경우도 있지만, 관심을 가지고 찾아봐야 알 수 있는 회사의 업무를 물어보는 경우도 있음 (대답 시 면접관들의 태도가 호감적으로 변경)
- 인성면접 외의 기술면접때도 어투나 행동을 계속 살핌. 다대다 면접의 경우 다른 면접자들의 대답을 경청하는 태도도 유심히 관찰
- 기술질문이 너무 적으면 인성질문 사이에 기술 어필도 적당히 어필 가능 (많이하면 자만심으로 비추니 적당히!)

1.
- 1~2분 자기소개
- 개발분야를 선택한 계기/동기
- 상사가 부당한 명령을 내린다면? / 상사와 갈등이 생긴다면?
- 야근에 대한 생각
- 해당 회사를 한 문장으로 설명한다면?
- 3년,5년,10년 뒤 자신의 상황 예측
- 희망연봉
- 회사에 궁금한 점이 있나요? 
  >>회사에 대해 관심을 가지고 갈 것. ex) 담당직무에 관한 질문, 뉴스기사에 나온 회사 사업에 대한 질문, 개발버전(자바,스프링 등), 야근/주말출근, 사수 등
- 우리 회사(팀) 에 합격한다면 가장 하고 싶은 것은?

- (친구와 함께 면접간 경우) 친구들 중 꼭 한명만 뽑아야 한다면 누구를 뽑아야 할까? 그 이유는?

<기술면접>
2. 
- 전위연산자 후위연산자 사용 결과  ++a a++ 차이
- 접근제한자란?
- 자바의 메모리
- oop란? (+ 특징에 대해 설명하라)
- 상속이란?
- 디자인패턴이란? (+ 아는 패턴에 대해 설명하라)
- 클래스와 인스턴스의 차이점
- 인터페이스란?
- 추상 클래스와 인터페이스 차이점
- extends / implements 차이점
- override/overload 차이점
- call by value/call by reference 차이점
- array/list/map 차이점
- 프레임워크의 장단점
- 프레임워크와 라이브러리의 차이점
- mvc란?
- web server와 was의 차이점
- javascript / jquery 차이점
- jsp / servlet 차이점
- scope
- spring di/ioc란? 
- aop란? (프로젝트에서 사용한 aop 설명)
- maven이란?
- spring 사용한 버전은?
- 필터와 인터셉터의 차이점
- restful api란?
- 파일 업로드 과정 설명(코드 작성하는 것처럼)

- 정규화란?
- order by / group by 차이점
- pl/sql 이 뭐의 약자인가 (Oracle’s Procedural Language extension to SQL)


3.
- 본인이 담당한 기능이 어느날 실행이 안된다. 껏다 켜보니 잘되고, 어느 땐 안되고 등등..10에 한두번이 실행이 안되면 어디서부터 문제를 찾아서 해결할 것인가?
- it 기술동향
- 자소서에 기술한 프로젝트(포트폴리오) 관련 질문
- 구글 면접질문 등(맨홀 뚜껑은 왜 동그란가?)

4.
- 구구단 손코딩
- byte a = 1; 
  byte b = 2; 
  byte sum = a+b; 
//오류가 나는지 안나는지, 오류가 나면 왜 오류가 나는지 설명

- String a = "가";
  String b = new String("가");
  System.out.println(a==b);
  System.out.println(a.equals(b));
//출력 결과 설명

- jdbc 손코딩
- 테이블 2개 조인하는 쿼리 손코딩
- 서브쿼리 손코딩

<추가>
5. 걸러야 되는 회사 답변
- 프로젝트에서 pm들이 주로 옛날사람이기 때문에 신기술 공부할 필요 없다 (공부해봤자 취업안된다)
- 비전공자가 취업하려면 경력뻥튀기는 해야된다. (이바닥이 다 그렇다)
- 퇴직금 포함
- 프로젝트에 파견되었을 때 잘하는 사람이 니 선임이다.(선임과 같이 투입되나요 의 답변)
- 우리는 원래 학원출신 안쓰는데~
- 이바닥 좁다며 협박아닌 협박(이바닥 좁으니 그냥 우리회사 들어와라)

6. 좋은 사이트

<구직활동>
- 잡코리아, 사람인, 인크루트, 로켓펀치, 원티드, 링크드인, 인디드
- 주니어 개발자 채용 정보
https://github.com/jojoldu/junior-recruit-scheduler?fbclid=IwAR0dVh-LBGCXnhFP_6yvV9P1CJV7ZkZMMvVrxh8TBi255kqmVFVsbJ6mg8k&mc_cid=d457ae7f20&mc_eid=3ce8f28a6a

- 자소설 닷컴 : 채용공고 달력, 해당 기업 자소서 문항 등 제공
https://jasoseol.com/

- 프로그래머스 : 코딩 테스트 연습, 채용
https://programmers.co.kr/

<회사 평가>
- 전자공시시스템 : 해당 회사 경영상태 파악
http://dart.fss.or.kr/
- 크레딧잡
https://kreditjob.com/
- 잡플레닛
https://www.jobplanet.co.kr/welcome/index

<온라인 교육>
- 인프런 : 괜찮은 무료강의 많음
https://www.inflearn.com/
- 대학공개강의
http://www.kocw.net/home/index.do

<오프라인 모임>
- 온오프믹스 : 세미나, 컨퍼런스 등 검색
https://onoffmix.com/
- festa.io : 세미나, 컨퍼런스 등 검색
https://festa.io/



<입사후>
7. 질문하는 방법
- 특정 하나의 문제를 가지고 3~4시간정도 아무런 진전이 없다면, 바로 질문하자.
  1) 해당 오류메시지를 가지고 구글링.
  2) 구글링해서 찾은 해답을 시도 및 정리 (어떤 방법을 썼고, 어떻게 안되는지)
  3) 2~3개정도의 인터넷 해답으로도 문제가 해결이 안되면, 2번에서 정리한 내용을 가지고 질문
  예) "xx 문제가 일어나 a 방법을 써봤는데 a'이 되면서 해결이 안되었고, b 방법을 써봤는데 b'이 되면서 해결이 안되었습니다. 제가 어떤 방법을 더 시도해봐야 할까요?"

8. 퇴사
- 인격적 모독, 건강상의 이유 등이 아니라면 되도록 버티자.
- 월급이 밀리면 바로 퇴사해야 함.
- 보통 인수인계 기간 한달 정도를 암묵적으로 지킴.
- 다른 회사에 면접보러 다니면서 이직할 회사를 찾아놓고, 그 후에 퇴사하는게 좋음 (공백이 생기면 마음이 급해져서 안좋은 회사로 이직할 가능성 높음)














